"""Added table

Revision ID: 66cf6de4e057
Revises: 9b9f40ec2cdc
Create Date: 2023-09-13 12:12:42.266794

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import bcrypt

# revision identifiers, used by Alembic.
revision: str = '66cf6de4e057'
down_revision: Union[str, None] = '9b9f40ec2cdc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_editor', sa.Boolean(), nullable=True),
    sa.Column('can_create_users', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    # ### end Alembic commands ###
    conn = op.get_bind()

    # Создаем хешированный пароль
    hashed_password = bcrypt.hashpw("admin".encode('utf-8'),
                                    bcrypt.gensalt()).decode('utf-8')

    # Добавляем пользователя admin с полными правами
    conn.execute(
        sa.text(
            "INSERT INTO users (username, email, password, is_admin, is_editor, can_create_users) VALUES ('admin', 'admin@admin.com', :password, true, true, true)"
        ).bindparams(password=hashed_password)
    )

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    # ### end Alembic commands ###
